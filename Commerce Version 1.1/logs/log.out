**************Creating session factory
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate Core {5.2.7.Final}
HHH000206: hibernate.properties not found
Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@4581e33b
Adding type registration boolean -> org.hibernate.type.BooleanType@4581e33b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4581e33b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6fecb72d
Adding type registration true_false -> org.hibernate.type.TrueFalseType@639a437e
Adding type registration yes_no -> org.hibernate.type.YesNoType@6b5302b3
Adding type registration byte -> org.hibernate.type.ByteType@6885f8a5
Adding type registration byte -> org.hibernate.type.ByteType@6885f8a5
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6885f8a5
Adding type registration character -> org.hibernate.type.CharacterType@7066d97
Adding type registration char -> org.hibernate.type.CharacterType@7066d97
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7066d97
Adding type registration short -> org.hibernate.type.ShortType@5c50c6f5
Adding type registration short -> org.hibernate.type.ShortType@5c50c6f5
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5c50c6f5
Adding type registration integer -> org.hibernate.type.IntegerType@67045bc7
Adding type registration int -> org.hibernate.type.IntegerType@67045bc7
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@67045bc7
Adding type registration long -> org.hibernate.type.LongType@15fd649c
Adding type registration long -> org.hibernate.type.LongType@15fd649c
Adding type registration java.lang.Long -> org.hibernate.type.LongType@15fd649c
Adding type registration float -> org.hibernate.type.FloatType@5f7fd931
Adding type registration float -> org.hibernate.type.FloatType@5f7fd931
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5f7fd931
Adding type registration double -> org.hibernate.type.DoubleType@55b6fc36
Adding type registration double -> org.hibernate.type.DoubleType@55b6fc36
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@55b6fc36
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7106af7d
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7106af7d
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7ee43f0
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7ee43f0
Adding type registration string -> org.hibernate.type.StringType@1f274f3f
Adding type registration java.lang.String -> org.hibernate.type.StringType@1f274f3f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ded430e
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3cd61a04
Adding type registration url -> org.hibernate.type.UrlType@e06d32a
Adding type registration java.net.URL -> org.hibernate.type.UrlType@e06d32a
Adding type registration Duration -> org.hibernate.type.DurationType@4204cf4e
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4204cf4e
Adding type registration Instant -> org.hibernate.type.InstantType@3779f401
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3779f401
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@78ab9ba5
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@78ab9ba5
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@58dd7031
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@58dd7031
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3b30cd9
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3b30cd9
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@39b88c78
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@39b88c78
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@30aff8c5
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@30aff8c5
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3de808b6
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3de808b6
Adding type registration date -> org.hibernate.type.DateType@61df886c
Adding type registration java.sql.Date -> org.hibernate.type.DateType@61df886c
Adding type registration time -> org.hibernate.type.TimeType@4dee813f
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4dee813f
Adding type registration timestamp -> org.hibernate.type.TimestampType@331fc68d
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@331fc68d
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@331fc68d
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5f954d67
Adding type registration calendar -> org.hibernate.type.CalendarType@6e157141
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6e157141
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6e157141
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@576c893f
Adding type registration locale -> org.hibernate.type.LocaleType@5fdfc618
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5fdfc618
Adding type registration currency -> org.hibernate.type.CurrencyType@6172324e
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6172324e
Adding type registration timezone -> org.hibernate.type.TimeZoneType@678e5c84
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@678e5c84
Adding type registration class -> org.hibernate.type.ClassType@5d210e32
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5d210e32
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2ecc8c9b
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2ecc8c9b
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@63a0280d
Adding type registration binary -> org.hibernate.type.BinaryType@3aa3091e
Adding type registration byte[] -> org.hibernate.type.BinaryType@3aa3091e
Adding type registration [B -> org.hibernate.type.BinaryType@3aa3091e
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@275556b6
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@275556b6
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@275556b6
Adding type registration row_version -> org.hibernate.type.RowVersionType@1479eda7
Adding type registration image -> org.hibernate.type.ImageType@15fb98f2
Adding type registration characters -> org.hibernate.type.CharArrayType@76a5ccbf
Adding type registration char[] -> org.hibernate.type.CharArrayType@76a5ccbf
Adding type registration [C -> org.hibernate.type.CharArrayType@76a5ccbf
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@608a7a06
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@608a7a06
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@608a7a06
Adding type registration text -> org.hibernate.type.TextType@5fdefa2f
Adding type registration ntext -> org.hibernate.type.NTextType@622930d5
Adding type registration blob -> org.hibernate.type.BlobType@b161782
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@b161782
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fa2851a
Adding type registration clob -> org.hibernate.type.ClobType@724b52f1
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@724b52f1
Adding type registration nclob -> org.hibernate.type.NClobType@5e4aa036
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5e4aa036
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5a96b72d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e88035
Adding type registration serializable -> org.hibernate.type.SerializableType@560fd55f
Adding type registration object -> org.hibernate.type.ObjectType@23b3c15a
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@23b3c15a
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@22a673dc
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1f22dfc3
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@63c1baf3
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4da1a8fa
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5c881a01
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@555d1a94
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3b2534ee
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7b03bd08
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/Commerce]
HHH10001001: Connection properties: {user=root, password=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 1 (min=1)
Database ->
       name : MySQL
    version : 5.7.17-enterprise-commercial-advanced-log
      major : 5
      minor : 7
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: com.admin.hibernate.POJO.Product
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Product
Bind entity com.admin.hibernate.POJO.Product on table product
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=productId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property productId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.admin.hibernate.POJO.Product:productId]
building SimpleValue for productId
Building property productId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=productBrand, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property productBrand with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.admin.hibernate.POJO.Product:productBrand]
building SimpleValue for productBrand
Building property productBrand
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=productDescription, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property productDescription with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.admin.hibernate.POJO.Product:productDescription]
building SimpleValue for productDescription
Building property productDescription
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=productName, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property productName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.admin.hibernate.POJO.Product:productName]
building SimpleValue for productName
Building property productName
Starting fillSimpleValue for productId
Starting fillSimpleValue for productBrand
Starting fillSimpleValue for productDescription
Starting fillSimpleValue for productName
Forcing column [productid] to be non-null as it is part of the primary key for table [product]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@42386b07
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.MySQLDialect, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\GitRepository\cloud-commerce\cloud-commerce\appservers\tomcat\7.0.69\bin\bootstrap.jar;D:\GitRepository\cloud-commerce\cloud-commerce\appservers\tomcat\7.0.69\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, catalina.useNaming=true, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Calcutta, os.name=Windows 10, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_121\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, sun.cpu.endian=little, user.home=C:\Users\lalitkum.ORADEV, user.language=en, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider, java.home=C:\Program Files\Java\jre1.8.0_121, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.resources.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., cache.provider_class=org.hibernate.cache.NoCacheProvider, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_121\lib\resources.jar;C:\Program Files\Java\jre1.8.0_121\lib\rt.jar;C:\Program Files\Java\jre1.8.0_121\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_121\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_121\lib\jce.jar;C:\Program Files\Java\jre1.8.0_121\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_121\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_121\classes, user.script=, server.loader=, connection.password=root, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_121-b13, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=lalitkum, path.separator=;, hibernate.connection.username=root, common.loader=D:\PERSONAL\PersonalCodePractice\.metadata\.plugins\org.eclipse.wst.server.core\tmp1/lib,D:\PERSONAL\PersonalCodePractice\.metadata\.plugins\org.eclipse.wst.server.core\tmp1/lib/*.jar,D:\GitRepository\cloud-commerce\cloud-commerce\appservers\tomcat\7.0.69/lib,D:\GitRepository\cloud-commerce\cloud-commerce\appservers\tomcat\7.0.69/lib/*.jar, os.version=10.0, java.endorsed.dirs=D:\GitRepository\cloud-commerce\cloud-commerce\appservers\tomcat\7.0.69\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/Commerce, connection.pool_size=1, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, org.apache.catalina.startup.ContextConfig.jarsToSkip=, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\LALITK~1.ORA\AppData\Local\Temp\, catalina.home=D:\GitRepository\cloud-commerce\cloud-commerce\appservers\tomcat\7.0.69, java.version=1.8.0_121, user.dir=D:\Softwares\eclipse, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,websocket-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,tools.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,taglibs-standard-spec-*.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j.jar,log4j-1*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,junit.jar,junit-*.jar,hamcrest*.jar,org.hamcrest*.jar,ant-launcher.jar,cobertura-*.jar,asm-*.jar,dom4j-*.jar,icu4j-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,oro-*.jar,servlet-api-*.jar,tagsoup-*.jar,xmlParserAPIs-*.jar,xom-*.jar,jersey-bundle*.jar,classes.jar,asm*.jar,oauth*.jar,libs.jar,launcher.jar,$CC_JARS, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=D:\PERSONAL\PersonalCodePractice\.metadata\.plugins\org.eclipse.wst.server.core\tmp1, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7819189f, wtp.deploy=D:\PERSONAL\PersonalCodePractice\.metadata\.plugins\org.eclipse.wst.server.core\tmp1\wtpwebapps, java.library.path=C:\Program Files\Java\jre1.8.0_121\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\ProgramData\Oracle\Java\javapath;D:\ORACLEEXE\app\oracle\product\11.2.0\server\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;D:\Perforce;D:\Perforce\DVCS\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files\MySQL\MySQL Enterprise Backup 4.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Java\jdk1.7.0_45\bin\;C:\Program Files\Java\jdk1.6.0_37\bin\;C:\ProgramData\Oracle\Java\javapath;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.6.0_37\bin\;C:\Program Files\Java\jdk1.7.0_45\bin\;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.121-b13, org.apache.catalina.startup.TldConfig.jarsToSkip=tomcat7-websocket.jar, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jre1.8.0_121\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.pool_size=1, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/Commerce, java.class.version=52.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Not known whether passed class name [com.admin.hibernate.POJO.Product] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.admin.hibernate.POJO.Product
Not known whether passed class name [com.admin.hibernate.POJO.Product] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.admin.hibernate.POJO.Product
Static SQL for entity: com.admin.hibernate.POJO.Product
 Version select: select productId from product where productId =?
 Snapshot select: select product_.productId, product_.productBrand as productB2_0_, product_.productDescription as productD3_0_, product_.productName as productN4_0_ from product product_ where product_.productId=?
 Insert 0: insert into product (productBrand, productDescription, productName, productId) values (?, ?, ?, ?)
 Update 0: update product set productBrand=?, productDescription=?, productName=? where productId=?
 Delete 0: delete from product where productId=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@514b0bef]
Visiting attribute path : productBrand
Visiting attribute path : productDescription
Visiting attribute path : productName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.admin.hibernate.POJO.Product)
    - Returns
       - EntityReturnImpl(entity=com.admin.hibernate.POJO.Product, querySpaceUid=<gen:0>, path=com.admin.hibernate.POJO.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.admin.hibernate.POJO.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {productI1_0_0_}

Static select for entity com.admin.hibernate.POJO.Product [NONE]: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@460f7a1]
Visiting attribute path : productBrand
Visiting attribute path : productDescription
Visiting attribute path : productName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.admin.hibernate.POJO.Product)
    - Returns
       - EntityReturnImpl(entity=com.admin.hibernate.POJO.Product, querySpaceUid=<gen:0>, path=com.admin.hibernate.POJO.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.admin.hibernate.POJO.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {productI1_0_0_}

Static select for entity com.admin.hibernate.POJO.Product [READ]: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b1d36c3]
Visiting attribute path : productBrand
Visiting attribute path : productDescription
Visiting attribute path : productName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.admin.hibernate.POJO.Product)
    - Returns
       - EntityReturnImpl(entity=com.admin.hibernate.POJO.Product, querySpaceUid=<gen:0>, path=com.admin.hibernate.POJO.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.admin.hibernate.POJO.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {productI1_0_0_}

Static select for entity com.admin.hibernate.POJO.Product [UPGRADE]: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b696080]
Visiting attribute path : productBrand
Visiting attribute path : productDescription
Visiting attribute path : productName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.admin.hibernate.POJO.Product)
    - Returns
       - EntityReturnImpl(entity=com.admin.hibernate.POJO.Product, querySpaceUid=<gen:0>, path=com.admin.hibernate.POJO.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.admin.hibernate.POJO.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {productI1_0_0_}

Static select for entity com.admin.hibernate.POJO.Product [UPGRADE_NOWAIT]: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23187bfe]
Visiting attribute path : productBrand
Visiting attribute path : productDescription
Visiting attribute path : productName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.admin.hibernate.POJO.Product)
    - Returns
       - EntityReturnImpl(entity=com.admin.hibernate.POJO.Product, querySpaceUid=<gen:0>, path=com.admin.hibernate.POJO.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.admin.hibernate.POJO.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {productI1_0_0_}

Static select for entity com.admin.hibernate.POJO.Product [UPGRADE_SKIPLOCKED]: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@518e6a02]
Visiting attribute path : productBrand
Visiting attribute path : productDescription
Visiting attribute path : productName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.admin.hibernate.POJO.Product)
    - Returns
       - EntityReturnImpl(entity=com.admin.hibernate.POJO.Product, querySpaceUid=<gen:0>, path=com.admin.hibernate.POJO.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.admin.hibernate.POJO.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {productI1_0_0_}

Static select for entity com.admin.hibernate.POJO.Product [FORCE]: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fd7a1ff]
Visiting attribute path : productBrand
Visiting attribute path : productDescription
Visiting attribute path : productName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.admin.hibernate.POJO.Product)
    - Returns
       - EntityReturnImpl(entity=com.admin.hibernate.POJO.Product, querySpaceUid=<gen:0>, path=com.admin.hibernate.POJO.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.admin.hibernate.POJO.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {productI1_0_0_}

Static select for entity com.admin.hibernate.POJO.Product [PESSIMISTIC_READ]: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@270cfce0]
Visiting attribute path : productBrand
Visiting attribute path : productDescription
Visiting attribute path : productName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.admin.hibernate.POJO.Product)
    - Returns
       - EntityReturnImpl(entity=com.admin.hibernate.POJO.Product, querySpaceUid=<gen:0>, path=com.admin.hibernate.POJO.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.admin.hibernate.POJO.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {productI1_0_0_}

Static select for entity com.admin.hibernate.POJO.Product [PESSIMISTIC_WRITE]: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d5d73e5]
Visiting attribute path : productBrand
Visiting attribute path : productDescription
Visiting attribute path : productName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.admin.hibernate.POJO.Product)
    - Returns
       - EntityReturnImpl(entity=com.admin.hibernate.POJO.Product, querySpaceUid=<gen:0>, path=com.admin.hibernate.POJO.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.admin.hibernate.POJO.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {productI1_0_0_}

Static select for entity com.admin.hibernate.POJO.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a402dc1]
Visiting attribute path : productBrand
Visiting attribute path : productDescription
Visiting attribute path : productName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.admin.hibernate.POJO.Product)
    - Returns
       - EntityReturnImpl(entity=com.admin.hibernate.POJO.Product, querySpaceUid=<gen:0>, path=com.admin.hibernate.POJO.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.admin.hibernate.POJO.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {productI1_0_0_}

Static select for entity com.admin.hibernate.POJO.Product [OPTIMISTIC]: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2e33be]
Visiting attribute path : productBrand
Visiting attribute path : productDescription
Visiting attribute path : productName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.admin.hibernate.POJO.Product)
    - Returns
       - EntityReturnImpl(entity=com.admin.hibernate.POJO.Product, querySpaceUid=<gen:0>, path=com.admin.hibernate.POJO.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.admin.hibernate.POJO.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {productI1_0_0_}

Static select for entity com.admin.hibernate.POJO.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=?
Static select for action ACTION_MERGE on entity com.admin.hibernate.POJO.Product: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=?
Static select for action ACTION_REFRESH on entity com.admin.hibernate.POJO.Product: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=?
No actions specified; doing nothing
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7d682ffa
Registering SessionFactory: e2f09d76-0623-4dd9-baea-6ac79a9e54e8 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
begin
Generated identifier: kjjj, using strategy: org.hibernate.id.Assigned
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.admin.hibernate.POJO.Product{productId=kjjj, productBrand=d, productDescription=ds, productName=d}
insert into product (productBrand, productDescription, productName, productId) values (?, ?, ?, ?)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
HHH000420: Closing un-released batch
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/Commerce]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
**************Creating session factory
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate Core {5.2.7.Final}
HHH000206: hibernate.properties not found
Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7a8335b6
Adding type registration boolean -> org.hibernate.type.BooleanType@7a8335b6
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7a8335b6
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4b8d4bc8
Adding type registration true_false -> org.hibernate.type.TrueFalseType@38879541
Adding type registration yes_no -> org.hibernate.type.YesNoType@9e438f
Adding type registration byte -> org.hibernate.type.ByteType@3d3755c3
Adding type registration byte -> org.hibernate.type.ByteType@3d3755c3
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3d3755c3
Adding type registration character -> org.hibernate.type.CharacterType@79506a2e
Adding type registration char -> org.hibernate.type.CharacterType@79506a2e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@79506a2e
Adding type registration short -> org.hibernate.type.ShortType@49373679
Adding type registration short -> org.hibernate.type.ShortType@49373679
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@49373679
Adding type registration integer -> org.hibernate.type.IntegerType@68e82b2b
Adding type registration int -> org.hibernate.type.IntegerType@68e82b2b
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@68e82b2b
Adding type registration long -> org.hibernate.type.LongType@261e2c78
Adding type registration long -> org.hibernate.type.LongType@261e2c78
Adding type registration java.lang.Long -> org.hibernate.type.LongType@261e2c78
Adding type registration float -> org.hibernate.type.FloatType@584934db
Adding type registration float -> org.hibernate.type.FloatType@584934db
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@584934db
Adding type registration double -> org.hibernate.type.DoubleType@73c28495
Adding type registration double -> org.hibernate.type.DoubleType@73c28495
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@73c28495
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@50da32b9
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@50da32b9
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@dda6cca
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@dda6cca
Adding type registration string -> org.hibernate.type.StringType@5f1cfab6
Adding type registration java.lang.String -> org.hibernate.type.StringType@5f1cfab6
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1ca0dceb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26cba4d9
Adding type registration url -> org.hibernate.type.UrlType@1696fb89
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1696fb89
Adding type registration Duration -> org.hibernate.type.DurationType@1541e2b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1541e2b
Adding type registration Instant -> org.hibernate.type.InstantType@4ad7a2b6
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4ad7a2b6
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6935b797
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6935b797
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1502835d
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1502835d
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@466e7c92
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@466e7c92
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e124869
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e124869
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@53245dc8
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@53245dc8
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3251a3a7
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3251a3a7
Adding type registration date -> org.hibernate.type.DateType@43057218
Adding type registration java.sql.Date -> org.hibernate.type.DateType@43057218
Adding type registration time -> org.hibernate.type.TimeType@5555132b
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5555132b
Adding type registration timestamp -> org.hibernate.type.TimestampType@5bd6328c
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5bd6328c
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5bd6328c
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5a815892
Adding type registration calendar -> org.hibernate.type.CalendarType@5d980923
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d980923
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d980923
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@229d8254
Adding type registration locale -> org.hibernate.type.LocaleType@1fc09f04
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1fc09f04
Adding type registration currency -> org.hibernate.type.CurrencyType@7e96a8a6
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7e96a8a6
Adding type registration timezone -> org.hibernate.type.TimeZoneType@6e0a9950
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6e0a9950
Adding type registration class -> org.hibernate.type.ClassType@1868353a
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1868353a
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3683ed83
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3683ed83
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a3132bf
Adding type registration binary -> org.hibernate.type.BinaryType@b2c9f2c
Adding type registration byte[] -> org.hibernate.type.BinaryType@b2c9f2c
Adding type registration [B -> org.hibernate.type.BinaryType@b2c9f2c
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3cdeee4c
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3cdeee4c
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3cdeee4c
Adding type registration row_version -> org.hibernate.type.RowVersionType@5d0fd6f
Adding type registration image -> org.hibernate.type.ImageType@3b5226ba
Adding type registration characters -> org.hibernate.type.CharArrayType@1ca6195a
Adding type registration char[] -> org.hibernate.type.CharArrayType@1ca6195a
Adding type registration [C -> org.hibernate.type.CharArrayType@1ca6195a
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@24f4354b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@24f4354b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@24f4354b
Adding type registration text -> org.hibernate.type.TextType@213a259f
Adding type registration ntext -> org.hibernate.type.NTextType@74387ccf
Adding type registration blob -> org.hibernate.type.BlobType@2374edf
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2374edf
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6996a334
Adding type registration clob -> org.hibernate.type.ClobType@7885f3bc
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7885f3bc
Adding type registration nclob -> org.hibernate.type.NClobType@2fc1c246
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2fc1c246
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6817e6f2
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5fa708e5
Adding type registration serializable -> org.hibernate.type.SerializableType@5c6a69bf
Adding type registration object -> org.hibernate.type.ObjectType@52af8547
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@52af8547
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@45e802d4
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6b432293
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@63bad83d
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@65892c2a
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@60f26ced
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@12578dda
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2719d49d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b5d5428
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/Commerce]
HHH10001001: Connection properties: {user=root, password=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 1 (min=1)
Database ->
       name : MySQL
    version : 5.7.17-enterprise-commercial-advanced-log
      major : 5
      minor : 7
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: com.admin.hibernate.POJO.Product
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Product
Bind entity com.admin.hibernate.POJO.Product on table product
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=productId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property productId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.admin.hibernate.POJO.Product:productId]
building SimpleValue for productId
Building property productId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=productBrand, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property productBrand with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.admin.hibernate.POJO.Product:productBrand]
building SimpleValue for productBrand
Building property productBrand
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=productDescription, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property productDescription with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.admin.hibernate.POJO.Product:productDescription]
building SimpleValue for productDescription
Building property productDescription
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=productName, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property productName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.admin.hibernate.POJO.Product:productName]
building SimpleValue for productName
Building property productName
Starting fillSimpleValue for productId
Starting fillSimpleValue for productBrand
Starting fillSimpleValue for productDescription
Starting fillSimpleValue for productName
Forcing column [productid] to be non-null as it is part of the primary key for table [product]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@62da4648
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.MySQLDialect, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\GitRepository\cloud-commerce\cloud-commerce\appservers\tomcat\7.0.69\bin\bootstrap.jar;D:\GitRepository\cloud-commerce\cloud-commerce\appservers\tomcat\7.0.69\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, catalina.useNaming=true, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Calcutta, os.name=Windows 10, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_121\bin, sun.java.command=org.apache.catalina.startup.Bootstrap start, sun.cpu.endian=little, user.home=C:\Users\lalitkum.ORADEV, user.language=en, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider, java.home=C:\Program Files\Java\jre1.8.0_121, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.resources.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., cache.provider_class=org.hibernate.cache.NoCacheProvider, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_121\lib\resources.jar;C:\Program Files\Java\jre1.8.0_121\lib\rt.jar;C:\Program Files\Java\jre1.8.0_121\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_121\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_121\lib\jce.jar;C:\Program Files\Java\jre1.8.0_121\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_121\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_121\classes, user.script=, server.loader=, connection.password=root, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_121-b13, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=lalitkum, path.separator=;, hibernate.connection.username=root, common.loader=D:\PERSONAL\PersonalCodePractice\.metadata\.plugins\org.eclipse.wst.server.core\tmp1/lib,D:\PERSONAL\PersonalCodePractice\.metadata\.plugins\org.eclipse.wst.server.core\tmp1/lib/*.jar,D:\GitRepository\cloud-commerce\cloud-commerce\appservers\tomcat\7.0.69/lib,D:\GitRepository\cloud-commerce\cloud-commerce\appservers\tomcat\7.0.69/lib/*.jar, os.version=10.0, java.endorsed.dirs=D:\GitRepository\cloud-commerce\cloud-commerce\appservers\tomcat\7.0.69\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/Commerce, connection.pool_size=1, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, org.apache.catalina.startup.ContextConfig.jarsToSkip=, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\LALITK~1.ORA\AppData\Local\Temp\, catalina.home=D:\GitRepository\cloud-commerce\cloud-commerce\appservers\tomcat\7.0.69, java.version=1.8.0_121, user.dir=D:\Softwares\eclipse, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,websocket-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,tools.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,taglibs-standard-spec-*.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j.jar,log4j-1*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,junit.jar,junit-*.jar,hamcrest*.jar,org.hamcrest*.jar,ant-launcher.jar,cobertura-*.jar,asm-*.jar,dom4j-*.jar,icu4j-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,oro-*.jar,servlet-api-*.jar,tagsoup-*.jar,xmlParserAPIs-*.jar,xom-*.jar,jersey-bundle*.jar,classes.jar,asm*.jar,oauth*.jar,libs.jar,launcher.jar,$CC_JARS, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, catalina.base=D:\PERSONAL\PersonalCodePractice\.metadata\.plugins\org.eclipse.wst.server.core\tmp1, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@53c6ba8e, wtp.deploy=D:\PERSONAL\PersonalCodePractice\.metadata\.plugins\org.eclipse.wst.server.core\tmp1\wtpwebapps, java.library.path=C:\Program Files\Java\jre1.8.0_121\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\ProgramData\Oracle\Java\javapath;D:\ORACLEEXE\app\oracle\product\11.2.0\server\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;D:\Perforce;D:\Perforce\DVCS\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files\MySQL\MySQL Enterprise Backup 4.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Java\jdk1.7.0_45\bin\;C:\Program Files\Java\jdk1.6.0_37\bin\;C:\ProgramData\Oracle\Java\javapath;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.6.0_37\bin\;C:\Program Files\Java\jdk1.7.0_45\bin\;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.121-b13, org.apache.catalina.startup.TldConfig.jarsToSkip=tomcat7-websocket.jar, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jre1.8.0_121\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.pool_size=1, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/Commerce, java.class.version=52.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Not known whether passed class name [com.admin.hibernate.POJO.Product] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.admin.hibernate.POJO.Product
Not known whether passed class name [com.admin.hibernate.POJO.Product] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.admin.hibernate.POJO.Product
Static SQL for entity: com.admin.hibernate.POJO.Product
 Version select: select productId from product where productId =?
 Snapshot select: select product_.productId, product_.productBrand as productB2_0_, product_.productDescription as productD3_0_, product_.productName as productN4_0_ from product product_ where product_.productId=?
 Insert 0: insert into product (productBrand, productDescription, productName, productId) values (?, ?, ?, ?)
 Update 0: update product set productBrand=?, productDescription=?, productName=? where productId=?
 Delete 0: delete from product where productId=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fb0acd5]
Visiting attribute path : productBrand
Visiting attribute path : productDescription
Visiting attribute path : productName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.admin.hibernate.POJO.Product)
    - Returns
       - EntityReturnImpl(entity=com.admin.hibernate.POJO.Product, querySpaceUid=<gen:0>, path=com.admin.hibernate.POJO.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.admin.hibernate.POJO.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {productI1_0_0_}

Static select for entity com.admin.hibernate.POJO.Product [NONE]: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26c51e8e]
Visiting attribute path : productBrand
Visiting attribute path : productDescription
Visiting attribute path : productName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.admin.hibernate.POJO.Product)
    - Returns
       - EntityReturnImpl(entity=com.admin.hibernate.POJO.Product, querySpaceUid=<gen:0>, path=com.admin.hibernate.POJO.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.admin.hibernate.POJO.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {productI1_0_0_}

Static select for entity com.admin.hibernate.POJO.Product [READ]: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@435199fe]
Visiting attribute path : productBrand
Visiting attribute path : productDescription
Visiting attribute path : productName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.admin.hibernate.POJO.Product)
    - Returns
       - EntityReturnImpl(entity=com.admin.hibernate.POJO.Product, querySpaceUid=<gen:0>, path=com.admin.hibernate.POJO.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.admin.hibernate.POJO.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {productI1_0_0_}

Static select for entity com.admin.hibernate.POJO.Product [UPGRADE]: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4caa81be]
Visiting attribute path : productBrand
Visiting attribute path : productDescription
Visiting attribute path : productName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.admin.hibernate.POJO.Product)
    - Returns
       - EntityReturnImpl(entity=com.admin.hibernate.POJO.Product, querySpaceUid=<gen:0>, path=com.admin.hibernate.POJO.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.admin.hibernate.POJO.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {productI1_0_0_}

Static select for entity com.admin.hibernate.POJO.Product [UPGRADE_NOWAIT]: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@281e7523]
Visiting attribute path : productBrand
Visiting attribute path : productDescription
Visiting attribute path : productName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.admin.hibernate.POJO.Product)
    - Returns
       - EntityReturnImpl(entity=com.admin.hibernate.POJO.Product, querySpaceUid=<gen:0>, path=com.admin.hibernate.POJO.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.admin.hibernate.POJO.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {productI1_0_0_}

Static select for entity com.admin.hibernate.POJO.Product [UPGRADE_SKIPLOCKED]: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@474efd69]
Visiting attribute path : productBrand
Visiting attribute path : productDescription
Visiting attribute path : productName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.admin.hibernate.POJO.Product)
    - Returns
       - EntityReturnImpl(entity=com.admin.hibernate.POJO.Product, querySpaceUid=<gen:0>, path=com.admin.hibernate.POJO.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.admin.hibernate.POJO.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {productI1_0_0_}

Static select for entity com.admin.hibernate.POJO.Product [FORCE]: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6792c4e3]
Visiting attribute path : productBrand
Visiting attribute path : productDescription
Visiting attribute path : productName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.admin.hibernate.POJO.Product)
    - Returns
       - EntityReturnImpl(entity=com.admin.hibernate.POJO.Product, querySpaceUid=<gen:0>, path=com.admin.hibernate.POJO.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.admin.hibernate.POJO.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {productI1_0_0_}

Static select for entity com.admin.hibernate.POJO.Product [PESSIMISTIC_READ]: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a9c9416]
Visiting attribute path : productBrand
Visiting attribute path : productDescription
Visiting attribute path : productName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.admin.hibernate.POJO.Product)
    - Returns
       - EntityReturnImpl(entity=com.admin.hibernate.POJO.Product, querySpaceUid=<gen:0>, path=com.admin.hibernate.POJO.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.admin.hibernate.POJO.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {productI1_0_0_}

Static select for entity com.admin.hibernate.POJO.Product [PESSIMISTIC_WRITE]: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3689ef02]
Visiting attribute path : productBrand
Visiting attribute path : productDescription
Visiting attribute path : productName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.admin.hibernate.POJO.Product)
    - Returns
       - EntityReturnImpl(entity=com.admin.hibernate.POJO.Product, querySpaceUid=<gen:0>, path=com.admin.hibernate.POJO.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.admin.hibernate.POJO.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {productI1_0_0_}

Static select for entity com.admin.hibernate.POJO.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e7877a4]
Visiting attribute path : productBrand
Visiting attribute path : productDescription
Visiting attribute path : productName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.admin.hibernate.POJO.Product)
    - Returns
       - EntityReturnImpl(entity=com.admin.hibernate.POJO.Product, querySpaceUid=<gen:0>, path=com.admin.hibernate.POJO.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.admin.hibernate.POJO.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {productI1_0_0_}

Static select for entity com.admin.hibernate.POJO.Product [OPTIMISTIC]: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c60e9d1]
Visiting attribute path : productBrand
Visiting attribute path : productDescription
Visiting attribute path : productName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.admin.hibernate.POJO.Product)
    - Returns
       - EntityReturnImpl(entity=com.admin.hibernate.POJO.Product, querySpaceUid=<gen:0>, path=com.admin.hibernate.POJO.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.admin.hibernate.POJO.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {productI1_0_0_}

Static select for entity com.admin.hibernate.POJO.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=?
Static select for action ACTION_MERGE on entity com.admin.hibernate.POJO.Product: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=?
Static select for action ACTION_REFRESH on entity com.admin.hibernate.POJO.Product: select product0_.productId as productI1_0_0_, product0_.productBrand as productB2_0_0_, product0_.productDescription as productD3_0_0_, product0_.productName as productN4_0_0_ from product product0_ where product0_.productId=?
No actions specified; doing nothing
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5c558c5e
Registering SessionFactory: 0282d505-5a9f-4413-b9c7-883fce456efe (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
begin
Generated identifier: kjjje, using strategy: org.hibernate.id.Assigned
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.admin.hibernate.POJO.Product{productId=kjjje, productBrand=d, productDescription=ds, productName=d}
insert into product (productBrand, productDescription, productName, productId) values (?, ?, ?, ?)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
HHH000420: Closing un-released batch
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/Commerce]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
